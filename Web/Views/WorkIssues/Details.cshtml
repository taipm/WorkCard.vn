@using CafeT.Text
@using CafeT.Objects
@using CafeT.Time
@using System.Globalization
@using Web.ModelViews
@model Web.Models.WorkIssue

@{
    ViewBag.Title = "Details - "  + Model.Title;
}

<div class="row">
    <div class="col-md-8">
        
        <h4>
            @if (Model.Repeat != Web.Models.RepeatType.None)
            {
                <span class="label label-info">@Model.Repeat</span>
            }
            @Model.Title
            <span class="label label-danger">@Model.Status</span>
        </h4>
        <p class="label label-default">
            @Html.Raw(Model.GetMessage())
        </p>
       
        <p>
            @Html.Raw(Model.Description)
        </p>
        <p>
            @Html.Raw(Model.Content)
        </p>
        <p>
            @if (Model.Tags != null && Model.Tags.Count > 0)
            {
                <h4>Tags: </h4>
                foreach (var _tag in Model.Tags)
                {
                    @Html.Raw(_tag + "; ")
                }
            }
        </p>
        <div id="Update"></div>
        <hr />
        <p>
            @Html.Partial("_IssueMenuForDetail", Model)
        </p>
    </div>
    <div class="col-md-4">
        Words: @Model.Content.GetCountWords()
        <br />
        Sentences: @Model.Content.GetSentences().Count()
        <br />
        Emails: @Model.Content.GetEmails().Count()
        <br />
        
        Links: @Model.Content.GetUrls().Count(); <br />
        <ul>
            @if (Model.Content.GetUrlsWithoutHref() != null && Model.Content.GetUrlsWithoutHref().Count() > 0)
            {
                foreach (string _link in Model.Content.GetUrlsWithoutHref())
                {
                    <li>
                        @Html.Raw(_link.ToHtmlLink())
                    </li>
                }
            }
        </ul>
        @if (Model.Content.HasYouTubeLink())
        {
            foreach (string youtubeLink in Model.Content.GetYouTubeUrls())
            {
                <div class="container">
                    <div class="sixteen columns">
                        <div class="embed-container">
                            @{
                                YouTubeView _youTube = new YouTubeView(youtubeLink);
                                @Html.Raw(_youTube.EmbedUrl);
                            }
                            
                            @*<iframe id='player' src="http://www.youtube.com/embed/4U4TzAtyYs0" frameborder="0" allowfullscreen></iframe>*@
                        </div>
                    </div>
                </div>
                
            }
        }
        <br />
        @if (Model.Content.GetTimes() != null && Model.Content.GetTimes().Length > 0)
        {
            <h4>Times: </h4>
            foreach (var _time in Model.Content.GetTimes())
            {
                @Html.Raw(_time + "; ")
            }
            <h4>Times with sorted: </h4>
            foreach (var _time in Model.Content.GetTimes().ToList().SortAscending())
                {
                @Html.Raw(_time.ToString("dd/MM/yyyy", new CultureInfo("en-GB")) + "; ") <br />
            }
            @*<h4>LaterNearest: </h4>
            {
                var _start = Model.Content.GetTimes().ToList().LaterNearest();
                string _startStr = _start.Value.ToString("dd/MM/yyyy", new CultureInfo("en-GB"));
                @Html.Raw(_startStr + "; ") <br />
                if (_start != null)
                {
                    @Ajax.ActionLink("Work on " + _startStr, "SetWorkOnTime", "WorkIssues", new { Id = Model.Id, date = _start },
                            new AjaxOptions
                            {
                                UpdateTargetId = "Update",
                                HttpMethod = "Post",
                            }, null)
                }
            }*@
                }
    </div>
</div>
